/*
 * This file was generated by the Gradle 'init' task.
 */
buildscript {
    configurations {
        compileClasspath {
            resolutionStrategy.activateDependencyLocking()
        }
        runtimeClasspath {
            resolutionStrategy.activateDependencyLocking()
        }
        annotationProcessor {
            resolutionStrategy.activateDependencyLocking()
        }
    }
}


plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.0.0'
    id "se.thinkcode.cucumber-runner" version "0.0.11"
    id 'org.gradle.crypto.checksum' version '1.4.0'
}



test {
    useJUnitPlatform()
}


repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri('https://repo.spring.io/snapshot')
    }

    maven {
        url = uri('https://oss.jfrog.org/artifactory/oss-snapshot-local')

        // allowInsecureProtocol = true
    }

    maven {
        url = uri('https://repo.spring.io/milestone')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-actuator:3.0.2'
    api 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.2'
    api 'org.springframework.boot:spring-boot-starter-web:3.0.2'
    api 'org.springframework.boot:spring-boot-starter-hateoas:3.0.2'
    api 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'
   // api 'org.springdoc:springdoc-openapi-ui:1.7.0'
    api 'org.springframework.boot:spring-boot-starter-validation:3.0.2'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:3.0.2'
    api 'mysql:mysql-connector-java:8.0.32'
    testImplementation(platform("io.cucumber:cucumber-bom:7.11.2"))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.junit.jupiter:junit-jupiter-engine')
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.5'
    api 'com.h2database:h2:2.1.214'
    testImplementation 'io.cucumber:cucumber-java:7.11.2'
    testImplementation 'io.cucumber:cucumber-spring:7.11.2'

    testImplementation 'io.cucumber:cucumber-junit:7.11.2'

    testImplementation(platform("org.junit:junit-bom:5.9.2"))
    testImplementation(platform("io.cucumber:cucumber-bom:7.11.2"))

    testImplementation("io.cucumber:cucumber-junit-platform-engine")
    testImplementation("org.junit.platform:junit-platform-suite")


}

group = 'com.in28minutes.springboot.rest.example'
version = '0.0.1-SNAPSHOT'
description = 'spring-boot-2-rest-service'

sourceCompatibility = 17
targetCompatibility = 17


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
    compileClasspath {
        resolutionStrategy.activateDependencyLocking()
    }
}




tasks.register('resolveAndLockAll') {
    notCompatibleWithConfigurationCache("Filters configurations at execution time")
    doFirst {
        assert gradle.startParameter.writeDependencyLocks
    }
    doLast {
        configurations.findAll {
            // Add any custom filtering on the configurations to be resolved
            it.canBeResolved
        }.each { it.resolve() }
    }
}




dependencyLocking {
    lockMode = LockMode.STRICT
}






